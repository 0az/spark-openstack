---

- name: update apt cache
  apt: update_cache=yes
  retries: 2

- name: install packages
  apt: name={{ item }} state=present
  with_items:
    - openjdk-7-jre
    - dstat
    - rsync

- name: disable net.ipv6.conf.all.disable_ipv6
  sysctl: name=net.ipv6.conf.all.disable_ipv6 value=1 state=present

- name: disable net.ipv6.conf.lo.disable_ipv6
  sysctl: name=net.ipv6.conf.lo.disable_ipv6 value=1 state=present

- name: increase hard file limits
  pam_limits: domain=* limit_type=hard limit_item=nofile value=1000000

- name: increase soft file limits
  pam_limits: domain=* limit_type=soft limit_item=nofile value=1000000

- name: create hadoop group
  group: name=hadoop state=present

- name: create hadoop user
  user: name={{ hadoop_user }} comment="Hadoop user" group=hadoop shell=/bin/bash

- name: put hadoop distro to master
  #get_url: url="{{ hadoop_url }}" dest=/usr/local/
  copy: src={{ hadoop_arch }} dest=/usr/local/
  when: "'{{ inventory_hostname }}' == '{{ active_master_inventory_hostname }}'"

- name: distribute hadoop among slaves
  synchronize:
    src: "/usr/local/{{ hadoop_file }}.tar.gz"
    dest: "/usr/local/{{ hadoop_file }}.tar.gz"
  delegate_to: "{{ active_master_inventory_hostname }}"

- name: unzip hadoop
  unarchive: copy=no src=/usr/local/{{ hadoop_file }}.tar.gz dest=/usr/local/ owner={{ hadoop_user }} group=hadoop

- name: create hadoop symlink
  file: src=/usr/local/{{ hadoop_file }} dest=/usr/local/hadoop state=link


- name: put needed swift library
  copy: src={{ swift_lib }} dest=/usr/local/{{ hadoop_file }}/share/hadoop/hdfs/lib/
  when: "{{ hadoop_version }} == 2.3 or {{ hadoop_version }} == 2.4 or {{ hadoop_version }} == 2.6"

#- name: remove hadoop archive
#  file: path=/usr/local/{{ hadoop_file }}.tar.gz state=absent

- name: set user and priviliges on hadoop
  file: path=/usr/local/{{ hadoop_file }} owner={{ hadoop_user }} group=hadoop recurse=yes

- name: put spark distro to master
  copy: src={{ spark_arch }} dest=/opt/
  when: "'{{ inventory_hostname }}' == '{{ active_master_inventory_hostname }}'"

- name: distribute spark distro among slaves
  synchronize:
    src: "/opt/{{ spark_file }}.tgz"
    dest: "/opt/{{ spark_file }}.tgz"
  delegate_to: "{{ active_master_inventory_hostname }}"

- name: unzip spark
  unarchive: copy=no src=/opt/{{ spark_file }}.tgz dest=/opt

#- name: remove spark archive
#  file: path=/opt/{{ spark_file }}.tgz state=absent

- name: create spark symlink
  file: src=/opt/{{ spark_file }} dest=/opt/spark state=link
