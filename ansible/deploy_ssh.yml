---

- hosts: localhost
  tasks:
    - name: create directory for ssh-keys if doesn't exist
      file: path=files/keys state=directory

- hosts: "{{ cluster_name }}_master"
  tasks:
    - name: generating key for hadoop user
      user: name={{ hadoop_user }} generate_ssh_key=yes
    - name: get the public key
      fetch: src="/home/{{ hadoop_user }}/.ssh/id_rsa.pub" dest="files/keys/{{ cluster_name }}.pub" flat=yes
    - name: get the private key
      fetch: src="/home/{{ hadoop_user }}/.ssh/id_rsa" dest="files/keys/{{ cluster_name }}" flat=yes

- hosts: "{{ cluster_name }}_master:{{ cluster_name }}_slaves"
  sudo: yes
  vars:
    hadoop_user: ubuntu
  tasks:
    - name: deploy authorized keys
      authorized_key: user={{ hadoop_user }} key={{ lookup('file', 'files/keys/{{ cluster_name }}.pub') }}

    - name: deploy ssh-keys
      copy: src="files/keys/{{ cluster_name }}" dest="/home/{{ hadoop_user }}/.ssh/{{ cluster_name }}"

    - name: distribute ssh config
      template: src=templates/config.j2 dest="/home/{{ hadoop_user }}/.ssh/config"

    - name: modify /etc/hosts
      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].openstack.private_v4}} {{ hostvars[item].openstack.name }}"
      with_items: "{{ play_hosts }}"
    #  template: src=templates/hosts.j2 dest=/etc/hosts
